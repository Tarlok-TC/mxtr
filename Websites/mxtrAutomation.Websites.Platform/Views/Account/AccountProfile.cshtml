@using mxtrAutomation.Web.Common.Extensions
@using mxtrAutomation.Websites.Platform.Queries
@using mxtrAutomation.Websites.Platform.UI
@using mxtrAutomation.Web.Common.Helpers
@using mxtrAutomation.Web.Common.UI
@using mxtrAutomation.Websites.Platform.Enums
@using mxtrAutomation.Corporate.Data.Enums;

@model mxtrAutomation.Websites.Platform.Models.Account.ViewModels.AccountProfileViewModel


<h3>Account Information</h3>
<h6>Enter the following required information to create an account.</h6>

<form class="form-horizontal form-label-left form account-information-form cf" action="@(Model.AccountSubmitUrl)" method="post">
    <input type="hidden" id="ObjectID" name="ObjectID" value="@Model.ObjectID" />
    <input type="hidden" id="MxtrAccountID" name="MxtrAccountID" value="@Model.MxtrAccountID" />
    <input type="hidden" id="ParentMxtrAccountID" name="ParentMxtrAccountID" value="@Model.ParentMxtrAccountID" />
    <input type="hidden" id="ParentAccountObjectID" name="ParentAccountObjectID" value="@Model.ParentAccountObjectID" />
    @Html.Hidden("IsActive", Model.IsActive, new { @id = "IsActive" })

    <div id="account-information-notification" class="notification-bar is-hidden"></div>

    <div class="row col-xs-12">
        <div class="col-sm-8 col-xs-12 form-group fld-wrap">
            <label for="AccountName">Company Name*</label>
            <input type="text" class="form-control required" id="AccountName" name="AccountName" placeholder="" value="@Model.AccountName" />
        </div>

        <div class="col-sm-4 col-xs-12 form-group fld-wrap">
            <label for="ParentAccountName">Parent Account</label>
            @if (Model.AccountActionKind == AccountActionKind.Edit)
            {
                @Html.DropDownList("MoveToAccount", Model.MoveToAccountOptions, new { id = "MoveToAccount", @class = "col-sm-5 col-xs-12 select2_single form-control required", data_placeholder = "Choose Account" })
            }
            else
            {
                <input type="text" class="form-control required" readonly="readonly" id="ParentAccountName" name="ParentAccountName" placeholder="" value="@Model.ParentAccountName" />
            }
        </div>
    </div>
    <div class="row col-xs-12">
        <div class="col-xs-12 form-group fld-wrap">
            <label for="StreetAddress">Street Address*</label>
            <input type="text" class="form-control required" id="StreetAddress" name="StreetAddress" placeholder="" value="@Model.StreetAddress" />
        </div>
    </div>

    <div class="row col-xs-12">
        <div class="col-sm-6 col-xs-12 form-group fld-wrap">
            <label for="City">City*</label>
            <input type="text" class="form-control required" id="City" name="City" placeholder="" value="@Model.City" />
        </div>
        <div class="col-sm-5 col-xs-12 form-group fld-wrap">
            <label for="State">State*</label><br />
            @Html.StateDropDownListFor(x => x.State, new { id = "State", @class = "col-sm-5 col-xs-12 select2_single form-control required", data_placeholder = "Choose State" })
        </div>
    </div>

    <div class="row col-xs-12">
        <div class="col-sm-6 col-xs-12 form-group fld-wrap">
            <label for="ZipCode">Zip Code*</label>
            <input type="text" class="form-control required" id="ZipCode" name="ZipCode" placeholder="" value="@Model.ZipCode" />
        </div>

        <div class="col-sm-5 col-xs-12 form-group fld-wrap">
            <label for="Country">Country*</label><br />
            @Html.CountryDropDownListFor(x => x.Country, new { id = "Country", @class = "col-sm-5 col-xs-12 select2_single form-control required", data_placeholder = "Choose Country" })
        </div>
    </div>
    <div class="row col-xs-12">
        <div class="col-sm-6 col-xs-12 form-group fld-wrap">
            <label for="Phone">Phone*</label>
            <input type="text" class="form-control required" id="Phone" name="Phone" placeholder="" value="@Model.Phone" />
        </div>
        <div class="col-sm-5 col-xs-12 form-group fld-wrap">
            <label for="AccountType">Account Type*</label><br />
            @Html.DropDownList("AccountType", Model.AccountTypeOptions, new { id = "AccountType", @class = "col-sm-5 col-xs-12 select2_single form-control required", data_placeholder = "Choose Account Type" })
        </div>
    </div>
    @if (Model.AccountType == AccountKind.Organization.ToString())
    {
        <div class="row col-xs-12">
            <div class="col-sm-6 col-xs-12 form-group fld-wrap">
                <label for="Domain">Application URI &nbsp;</label>
                <code><span id="spDomainName"></span></code>
            </div>
        </div>
    }

    <div class="row col-xs-12">
        <div class="col-sm-6 col-xs-12 form-group fld-wrap">
            <label>Store ID</label>
            <input type="text" class="form-control" id="StoreId" name="StoreId" placeholder="" value="@Model.StoreId" />
        </div>
    </div>

    <div class="form-group col-xs-12">
        <button type="submit" id="CreateAccountSubmit" name="CreateAccountSubmit" class="btn btn-primary">@Model.AccountSubmitText</button>
        <span class="loader loader-40 loader-white is-hidden"></span>
        <div class="form-sending"><strong>Updating Information</strong><span></span></div>
        @if (Model.AccountActionKind == AccountActionKind.Edit)
            {
            <button type="button" id="SkipCreateAccount" name="SkipCreateAccount" class="btn btn-info">Skip</button>
        }
    </div>

    <script>
        var _domainName = '@Model.DomainName';
        $(document).ready(function () {
            setDomainName();
        });

        function setDomainName() {
            var baseUrl = '';
            var urlProtocol = window.location.protocol;
            var hostname = location.hostname;
            var regex = /(?:http[s]*\:\/\/)*(.*?)\.(?=[^\/]*\..{2,5})/i
            var result = hostname.match(regex);
            if (result && result.length) {
                if (result[1] == _domainName) {
                    baseUrl = urlProtocol + "//" + hostname + "/";
                } else {
                    baseUrl = urlProtocol + "//" + _domainName + "." + hostname.substring((hostname.indexOf('.') + 1), hostname.length) + "/";
                }
            } else {
                baseUrl = urlProtocol + "//" + _domainName + "." + hostname + "/";
            }
            $("#spDomainName").text(baseUrl);
        }
    </script>


</form>